import React from "react";

import { pageStyle } from "./styles.jsx";

import Slideraperture from "./sliderswiper/slideraperture.jsx";

import Sliderhome from "./sliderswiper/sliderhome.jsx";

import Slidershutter from "./sliderswiper/slidershutter.jsx";

import Slideriso from "./sliderswiper/slideriso.jsx";

import about from "./img/about.jpg";

import Telegram from "./img/Telegram.png";

const Home = () => {
  return (
    <div>
      <p>
        <h1>
          Краткие рекомендациями по настройке экспозиции фотовидеокамеры и
          созданию качественных фотографий в различных условиях освещения.
        </h1>
      </p>
      <div className="sliderhome">
        <Sliderhome />
      </div>
    </div>
  );
};

const Aperture = () => {
  return (
    <div>
      <h1>Диафрагма</h1>
      <p>
        <strong>Диафрагма</strong> — это отверстие, которое пропускает свет. В
        фотоаппаратах это диаметр, на который открывается диафрагма. Диафрагма с
        маленьким диаметром пропускает мало света, а с большим - больше. Размер
        этого отверстия называется F-стоп. <br />
        <strong>F-Stop</strong> — это значение, которое соотносит диафрагму с
        фокусным расстоянием объектива. Таким образом, более длинный объектив
        может иметь большую диафрагму, а более короткий — меньшую, но при этом
        они будут иметь одинаковый F-стоп.
        <br />
        <br />
        <strong>Диафрагма и F-Stop обратно пропорциональны.</strong>
      </p>
      <div style={pageStyle.table}>
        <div style={pageStyle.row}>
          <div style={pageStyle.column}>
            <strong>Маленький F-Stop / Большая Диафрагма:</strong>
          </div>
          <div style={pageStyle.column}>
            <strong>Большой F-Stop / Маленькая Диафрагма:</strong>
          </div>
        </div>
        <div style={pageStyle.row}>
          <div style={pageStyle.column}>
            Глубина резкости очень узкая; фотографии будут ярче и будет размытие
            переднего фона и заднего плана.
          </div>
          <div style={pageStyle.column}>
            Глубина резкости очень широка; фотографии будут темнее, но будет
            менее размытый фон и передний план.
          </div>
        </div>
      </div>
      <div className="slideraperture">
        <Slideraperture />
      </div>
    </div>
  );
};

const ShutterSpeed = () => {
  return (
    <div>
      <h1>Выдержка</h1>
      <p>
        <strong>Выдержка</strong>, или скорость затвора — это время, в течение
        которого открыт затвор камеры и свет попадает на матрицу. Механизм
        затвора находится внутри фотоаппарата, непосредственно перед матрицей. В
        зеркальных камерах перед затвором находится зеркало, которое отражает
        изображение в видоискатель. Выдержка — это то, насколько быстро камера
        снимает картинку.
      </p>
      <div style={pageStyle.table}>
        <div style={pageStyle.row}>
          <div style={pageStyle.column}>
            <strong>Высокая выдержка (быстрая скорость затвора):</strong>
          </div>
          <div style={pageStyle.column}>
            <strong>Низкая выдержка (медленная скорость затвора):</strong>
          </div>
        </div>
        <div style={pageStyle.row}>
          <div style={pageStyle.column}>
            Более четкие объекты, когда они движутся. Более темное изображение,
            потому что меньше света может попасть в вашу камеру.
          </div>
          <div style={pageStyle.column}>
            Более размытые объекты, когда они движутся. Более яркие фотографии,
            потому что в камеру может попасть больше света.
          </div>
        </div>
      </div>
      <p>
        <h4>
          Выдержка 1/60 — это самая низкая выдержка, которую вы можете получить
          для яркого снимка фотографии, которая не заметно размыта.
        </h4>
      </p>
      <div className="slideraperture">
        <Slidershutter />
      </div>
    </div>
  );
};

const ISO = () => {
  return (
    <div>
      <h1>ISO</h1>
      <p>
        <strong>Светочувствительность ISO</strong> — это показатель того,
        насколько чувствительны сенсоры камеры к свету. Она характеризует
        чувствительность матрицы цифровой камеры к свету: чем выше показатель,
        тем меньше света нужно для получения правильно экспонированного снимка.
        При повышении или понижении этого параметра в ручном режиме можно
        напрямую регулировать яркость изображения.
      </p>
      <p>
        <h4>Зависимость такая: чем больше цифра ISO, тем светлее кадр.</h4>
      </p>
      <p>
        Увеличение ISO камеры делает изображения ярче, но также увеличивает их{" "}
        <strong>шум</strong>, или зернистость. Вот почему ночные фотографии,
        которые обычно сделаны с высоким ISO, при внимательном рассмотрении
        имеют черные точки.
      </p>
      <p>
        Когда света достаточно, ставьте на фотоаппарате ISO 100 или ISO 200.
        Если немного не хватает — держитесь в районе ISO 400 - ISO 800. В
        сумерках и полумраке значения ISO могут находиться в диапазоне от 1000
        до 1600.
      </p>
      <div style={pageStyle.table}>
        <div style={pageStyle.row}>
          <div style={pageStyle.column}>
            <strong>Маленький ISO:</strong>
          </div>
          <div style={pageStyle.column}>
            <strong>Большой ISO:</strong>
          </div>
        </div>
        <div style={pageStyle.row}>
          <div style={pageStyle.column}>
            Сенсоры камеры не очень чувствительны, что снижает общую яркость.
            Это сделает снимки менее шумными.
          </div>
          <div style={pageStyle.column}>
            Датчики камеры очень чувствительны к свету, поэтому изображения
            получаются более яркими. Это сделает снимки более шумными.
          </div>
        </div>
      </div>
      <div className="slideraperture">
        <Slideriso />
      </div>
    </div>
  );
};

const About = () => {
  return (
    <div>
      <h1>Информация о сайте</h1>
      <p>
        <strong>Сайт Exposition </strong> создан на основе итогового тестового
        проекта Single Page Application программы обучения "Mimo" по web
        development. Описания для каждого элемента экспозиции были переведены на
        русский язык, дополнены и расширены с использованием русской лексики и
        понятий на основе личного профессионального опыта фото и видео съемки.
        Кроме того, к ним были добавлены фотографии, которые помогают пояснить
        логику и продемонстрировать принципы работы описанных параметров и
        характеристик фотовидеокамеры.
        <br />
        Информация представлена в ознакомительных целях, заимствована на
        просторах интернета из открытых источников и может использоваться без
        уведомления автора.
      </p>
      <p>
        <h2>
          <strong style={{ color: "blue" }}>Детали разработки сайта: </strong>
        </h2>
      </p>
      <p style={{ textAlign: "left" }}>
        1. Заголовок <strong>"Работаем с камерой и светом"</strong> выполнен с
        использованием стилей цветовой заливки текста. animation: water 8s
        infinite - скорость заполнения цветом и @keyframes water - зависимость
        скорости заполнения от процента заполнения цветом.
      </p>
      <p style={{ textAlign: "left" }}>
        2. Для размещения фотографий использовались стили слайдера Swiper: В
        Главном меню стиль swiper-react-effect-flip, Диафрагма -
        swiper-react-slides-per-view-auto, Выдержка -
        swiper-react-pagination-custom, ISO - swiper-react-default. И вот тогда
        я понял, что не нужно мешать разные стили в React. Но всё-таки выровнял,
        хотя и кривовато получилось. Будет больше опыта может и переработаю, но
        лучше сделать по-другому.
      </p>
      <p style={{ textAlign: "left" }}>
        3. Сверху, в левой части меню, крутится логотип React. Файлик svg
        стилизован скоростью вращения @media animation: App-logo-spin infinite
        10s linear и направлением вращения по часовой стрелке @keyframes
        App-logo-spin transform: rotate(360deg).
      </p>
      <p style={{ textAlign: "left" }}>
        4. Почётный верхний правый угол достался цифровым часикам. Clock
        выполнени на React-компоненте state, показывает текущее время и
        обновляет его каждую секунду.
      </p>
      <p style={{ textAlign: "left" }}>
        5. И часы и логотип визуально приподняты над поверхностью с помощью
        стилизации box-shadow: 0px 10px 20px 5px rgba(0, 0, 0, 0.3).
      </p>
      <p style={{ textAlign: "left" }}>
        6. Для переключения и маршрутизации страниц принято решение React Router
        (по сути дела это и было заданием проекта по завершению обучения). Для
        создания этого веб-приложения использовался react-router-dom, который
        включает в себя все, что есть в react-router, и добавляет несколько
        специфичных для DOM API компонентов, включая BrowserRouter и Link.
        Приложение имеет один BrowserRouter, который обертывает пять Routes
        (пунктов меню). BrowserRouter и Routes используются для определения
        маршрутизатора. Когда URL-адрес соответствует пути, например, Диафрагма,
        приложение показывает компонент Диафрагма или, например: Выдержка,
        приложение показывает компонент Выдержка. Навигации по ссылке, которая
        устанавливается Link, отображает доступный элемент маршрута с реальным
        href, указывающим на ресурс, на который он ссылается. Клик по ссылке
        устанавливает URL-адрес. При этом страница не перегружается, а
        отображается компонент по ссылке. Мне кажется это более современный и
        удобный вариант, чем простая загрузка пяти листов HTML, хотя и более
        сложный в реализации. Но "это того стоит". При развертывании проекта в
        gh-page на GitHub BrowserRouter заменён на HashRouter.
      </p>
      <p style={{ textAlign: "left" }}>
        7. Кнопки оставил стандартным стилем, иначе выйдет очень громоздко, если
        подключать градиенты, переходы и прочее. К тому же, при обёртывании в
        грид контейтер теряется стилистика боковых элементов страницы.
      </p>
      <p style={{ textAlign: "left" }}>
        8. В конце каждой страницы установлен месяц и год создания данного
        приложения. Хотел запустить дату с авто обновлением, но подумал, что это
        будет уже лишним, хотя делается через getFullYear.
      </p>
      <p style={{ textAlign: "left" }}>
        9. Со мной можно связаться по Telegram мессенджеру, кнопочка внизу
        &#128071;.
      </p>
      <div style={pageStyle.table}>
        <div style={pageStyle.row}>
          <div style={pageStyle.column}>
            <strong style={{ color: "green" }}>Что понравилось:</strong>
          </div>
          <div style={pageStyle.column}>
            <strong style={{ color: "red" }}>Что не понравилось:</strong>
          </div>
        </div>
        <div style={pageStyle.row}>
          <div style={pageStyle.column}>
            <p style={{ textAlign: "left" }}>
              1. Сама работа по разработке и созданию сайта.
              <p style={{ textAlign: "left" }}>
                2. Работа с JavaScript и React хоть и скучная, но интересная
                (можно сделать и по-другому, но не так).
              </p>
              <p style={{ textAlign: "left" }}>
                3. Можно вставлять разные баннеры, дополнительные элементы, типа
                логотипа и часов.
              </p>{" "}
              <p style={{ textAlign: "left" }}>
                4. Работа со стилями. Познавательно и уморительно.
              </p>
            </p>
          </div>
          <div style={pageStyle.column}>
            <p style={{ textAlign: "left" }}>
              1. Не всё задуманное можно воплотить по своему желанию. Это
              требует знания правил и многократной практики. Со временем придет
              опыт, вместе с ним - новые возможности и желания, а также,
              конечно, новые ошибки, но уже будет легче.
            </p>
            <p style={{ textAlign: "left" }}>
              2. Много зависимостей от версий компонентов.
            </p>
            <p style={{ textAlign: "left" }}>
              3. Огромное количество устаревшей информации (3...6 летней
              давности) в интернете, а свежей (2...5 месяцев) почти нет.
            </p>
          </div>
        </div>
        <img src={about} alt="img" />
      </div>
      <br />
      <a className="tg" href="https://t.me/yurdos73">
        <img src={Telegram} alt="Telegram" style={{ height: 50 }} />
      </a>
    </div>
  );
};

export { Home, Aperture, ShutterSpeed, ISO, About };
